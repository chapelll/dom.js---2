{"version":3,"sources":["dom.js"],"names":["window","dom","create","string","container","document","createElement","innerHTML","trim","content","firstChild","after","node","node2","parentNode","insertBefore","nextSibling"],"mappings":"AAAAA,MAAM,CAACC,GAAP,GAAa,EAAb,EAEA;AACA;;AACAA,GAAG,CAACC,MAAJ,GAAa,UAASC,MAAT,EAAiB;AAC1B,MAAIC,SAAS,GAAGC,QAAQ,CAACC,aAAT,CAAuB,UAAvB,CAAhB;AACAF,EAAAA,SAAS,CAACG,SAAV,GAAsBJ,MAAM,CAACK,IAAP,EAAtB;AACA,SAAOJ,SAAS,CAACK,OAAV,CAAkBC,UAAzB;AACH,CAJD,EAMA;;;AACAT,GAAG,CAACU,KAAJ,GAAY,UAASC,IAAT,EAAcC,KAAd,EAAqB;AAC7BD,EAAAA,IAAI,CAACE,UAAL,CAAgBC,YAAhB,CAA6BF,KAA7B,EAAoCD,IAAI,CAACI,WAAzC,EAD6B,CAE7B;AACH,CAHD","file":"dom.1d0b6d56.js","sourceRoot":"..","sourcesContent":["window.dom = {}\r\n\r\n// 1.创建节点\r\n// (传入字符串形式的标签便可以直接创建元素，比如传入 \"<div>\" 或者 \"<li>\")\r\ndom.create = function(string) {\r\n    let container = document.createElement('template')\r\n    container.innerHTML = string.trim()\r\n    return container.content.firstChild\r\n}\r\n\r\n// 2.追加节点(在一个节点后面新增一个节点)\r\ndom.after = function(node,node2) {\r\n    node.parentNode.insertBefore(node2, node.nextSibling)\r\n    // 找到node的父亲，父亲会将node2插入到node的下一个节点的前面(node为最后一个节点也正常)\r\n}\r\n"]}